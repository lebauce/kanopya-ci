#! /bin/bash
### BEGIN INIT INFO
# Provides:           wolproxy
# Required-Start:     
# Required-Stop:      $network $syslog
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  WOL proxy
# Description:        wolproxy listens for WOL packets on VirtualBox host only interfaces and spawn virtual machines with the right MAC address
### END INIT INFO

set -e

. /lib/lsb/init-functions

PATH="/opt/kanopya/sbin:$PATH"
DAEMON="/var/lib/jenkins/bin/wolproxy"
EXEC="wolproxy"
NAME="WOL proxy"
PIDFILE="/var/run/$EXEC.pid"

test -x "/var/lib/jenkins/bin/$EXEC" || exit 0

WOLPROXY_RUN=yes
WOLPROXY_OPTS=''

# Reads config file (will override defaults above)
[ -r /etc/default/wolproxy ] && . /etc/default/wolproxy

RUN_DAEMON=$WOLPROXY_RUN
DAEMON_OPTS=$WOLPROXY_OPTS

cd /

status=0;
status_of_proc -p $PIDFILE $DAEMON $EXEC > /dev/null || status=$?

case "$1" in
  start)
    if [ $status == 0 ]; then
		log_success_msg "$NAME already running"
    else
		log_success_msg "Starting $NAME service"
		if [ "$RUN_DAEMON" = "yes" ]; then
		    start-stop-daemon --quiet --start --background --oknodo --make-pidfile --pidfile $PIDFILE --exec $DAEMON \
			-- $DAEMON_OPTS
		fi
    fi  	
    ;;
  stop)
  	
  	if [ $status == 0 ]; then
  		log_success_msg "Stopping $NAME service"
    	start-stop-daemon --quiet --stop --pidfile $PIDFILE --oknodo 
    	if [ -f $PIDFILE ]; then
    		rm $PIDFILE
    	fi
    else
    	log_success_msg "$NAME not started"
    fi
    ;;
  restart)
    log_success_msg "Restarting $NAME service"
    if [ $status == 0 ]; then
	    if [ "$RUN_DAEMON" = "yes" -a -f $CONF_FILE ]; then
			start-stop-daemon --quiet --stop --pidfile $PIDFILE --oknodo 
			if [ -f $PIDFILE ]; then
				rm $PIDFILE
			fi
	    fi
	    # Allow the daemons time to exit completely.
	    sleep 2
	fi
    start-stop-daemon --quiet --start --background --oknodo --make-pidfile --pidfile $PIDFILE --exec $DAEMON \
	    -- $DAEMON_OPTS
    ;;
  status)
  	status_of_proc $DAEMON $EXEC  && exit 0 || exit $?
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit 0
