#! /bin/bash
### BEGIN INIT INFO
# Provides:           wolproxy
# Required-Start:
# Required-Stop:      $network $remote_fs $syslog
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Wake on LAN proxy
# Description:        Wake on LAN proxy
### END INIT INFO

set -e

. /lib/lsb/init-functions

DAEMON="python /var/lib/jenkins/ciplatform/wolproxy.py"
EXEC="wolproxy"
NAME="Wake on LAN proxy"
PIDFILE="/var/log/jenkins/wolproxy.pid"
RETVAL=0

WOLPROXY_RUN=yes
WOLPROXY_OPTS="-b -p $PIDFILE"

# Reads config file (will override defaults above)
[ -r /etc/sysconfig/wolproxy ] && . /etc/sysconfig/wolproxy

RUN_DAEMON=$WOLPROXY_RUN
DAEMON_OPTS=$WOLPROXY_OPTS

start() {
    echo -n "Starting $NAME"
    pidofproc -p $PIDFILE $DAEMON > /dev/null && status=0 || status=$?

    if [ $status == 0 ]; then
        RETVAL=1
    else
        if [ "$RUN_DAEMON" = "yes" ]; then
            start_daemon -p $PIDFILE -u jenkins $DAEMON $DAEMON_OPTS
            RETVAL=$?
        fi
    fi

    [ $RETVAL == 0 ] && log_success_msg || log_failure_msg
}

stop() {
    echo -n "Stopping $NAME"
    pidofproc -p $PIDFILE $DAEMON > /dev/null && status=0 || status=$?

    if [ $status == 0 ]; then
        killproc -p $PIDFILE $DAEMON
        RETVAL=$?
        if [ -f $PIDFILE ]; then
            rm $PIDFILE
        fi
    else
        RETVAL=1
    fi

    [ $RETVAL == 0 ] && log_success_msg || log_failure_msg
}

status() {
    pidofproc -p $PIDFILE $DAEMON > /dev/null && status=0 || status=$?

    if [ $status == 0 ]; then
        echo "$NAME is running"
    else
        echo "$NAME is not running"
    fi
    RETVAL=$status
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit $RETVAL
